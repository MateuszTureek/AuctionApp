// <auto-generated />
using System;
using AuctionApp.Core.DAL.Data.AuctionContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace AuctionApp.Core.DAL.Data.AuctionContext.Migrations
{
    [DbContext(typeof(AuctionDbContext))]
    [Migration("20180723083830_BidAddUsername")]
    partial class BidAddUsername
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.1-rtm-30846")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("AuctionApp.Core.DAL.Data.AuctionContext.Domain.Bid", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("BidAmount")
                        .HasColumnType("decimal(16,2)");

                    b.Property<DateTime>("DatePlaced");

                    b.Property<int?>("ItemRef");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasMaxLength(450);

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("ItemRef");

                    b.ToTable("Bids");
                });

            modelBuilder.Entity("AuctionApp.Core.DAL.Data.AuctionContext.Domain.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<short>("Position");

                    b.HasKey("Id");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("AuctionApp.Core.DAL.Data.AuctionContext.Domain.Item", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("AuctionEnd");

                    b.Property<DateTime?>("AuctionStart");

                    b.Property<decimal>("ConstPrice")
                        .HasColumnType("decimal(16,2)");

                    b.Property<string>("ImgSrc")
                        .IsRequired();

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<int?>("OrderId");

                    b.Property<int?>("PaymentRef");

                    b.Property<int>("Status");

                    b.Property<int?>("SubcategoryRef");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasMaxLength(450);

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.HasIndex("PaymentRef");

                    b.HasIndex("SubcategoryRef");

                    b.ToTable("Items");
                });

            modelBuilder.Entity("AuctionApp.Core.DAL.Data.AuctionContext.Domain.ItemDescription", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ItemRef");

                    b.Property<string>("Key")
                        .IsRequired()
                        .HasMaxLength(80);

                    b.Property<string>("Value")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("ItemRef");

                    b.ToTable("ItemDescriptions");
                });

            modelBuilder.Entity("AuctionApp.Core.DAL.Data.AuctionContext.Domain.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BuyerId")
                        .IsRequired()
                        .HasMaxLength(450);

                    b.Property<DateTime>("Date");

                    b.Property<decimal>("TotalCost")
                        .HasColumnType("decimal(16,2)");

                    b.HasKey("Id");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("AuctionApp.Core.DAL.Data.AuctionContext.Domain.Payment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Cost")
                        .HasColumnType("decimal(16,2)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("Payments");
                });

            modelBuilder.Entity("AuctionApp.Core.DAL.Data.AuctionContext.Domain.Subcategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CategoryRef");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<short>("Position");

                    b.HasKey("Id");

                    b.HasIndex("CategoryRef");

                    b.ToTable("Subcategories");
                });

            modelBuilder.Entity("AuctionApp.Core.DAL.Data.AuctionContext.Domain.Bid", b =>
                {
                    b.HasOne("AuctionApp.Core.DAL.Data.AuctionContext.Domain.Item", "Item")
                        .WithMany("Bids")
                        .HasForeignKey("ItemRef");
                });

            modelBuilder.Entity("AuctionApp.Core.DAL.Data.AuctionContext.Domain.Item", b =>
                {
                    b.HasOne("AuctionApp.Core.DAL.Data.AuctionContext.Domain.Order", "Order")
                        .WithMany("Items")
                        .HasForeignKey("OrderId");

                    b.HasOne("AuctionApp.Core.DAL.Data.AuctionContext.Domain.Payment", "Payment")
                        .WithMany("Items")
                        .HasForeignKey("PaymentRef");

                    b.HasOne("AuctionApp.Core.DAL.Data.AuctionContext.Domain.Subcategory", "Subcategory")
                        .WithMany("Items")
                        .HasForeignKey("SubcategoryRef");
                });

            modelBuilder.Entity("AuctionApp.Core.DAL.Data.AuctionContext.Domain.ItemDescription", b =>
                {
                    b.HasOne("AuctionApp.Core.DAL.Data.AuctionContext.Domain.Item", "Item")
                        .WithMany("ItemDescriptions")
                        .HasForeignKey("ItemRef");
                });

            modelBuilder.Entity("AuctionApp.Core.DAL.Data.AuctionContext.Domain.Subcategory", b =>
                {
                    b.HasOne("AuctionApp.Core.DAL.Data.AuctionContext.Domain.Category", "Category")
                        .WithMany("Subcategories")
                        .HasForeignKey("CategoryRef")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
